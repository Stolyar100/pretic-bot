generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employee {
  telegramId   Int?    @map("TelegramId")
  tabNumber    String  @id @map("TabNumber") @db.VarChar(4)
  fullName     String? @map("FullName")
  phone        String? @map("Phone")
  isAdmin      Boolean @default(false) @map("IsAdmin")
  telegramUser User?

  @@map("TGBotEmployee")
}

model User {
  id                Int      @id @map("TelegramId")
  employeeTabNumber String   @unique @map("EmployeeTabNumber") @db.VarChar(4)
  offers            Offer[]
  employeeData      Employee @relation(fields: [employeeTabNumber], references: [tabNumber])

  @@map("TGBotUser")
}

model Offer {
  id           Int         @id @default(autoincrement()) @map("Id")
  shortName    String      @map("ShortName") @db.VarChar(70)
  authorId     Int         @map("AuthorId")
  fileMsgId    Int?        @map("FileMsgId")
  creationDate DateTime    @default(now()) @map("CreationDate") @db.Timestamp(6)
  status       OfferStatus @default(PENDING) @map("Status")
  Author       User        @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@map("TGBotOffer")
}

enum OfferStatus {
  PENDING
  ACCEPTED
  REJECTED

  @@map("TGBotOfferStatus")
}
